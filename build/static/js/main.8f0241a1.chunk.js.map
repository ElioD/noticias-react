{"version":3,"sources":["components/header.js","components/noticia.js","components/listaNoticas.js","components/formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","titulo","className","Noticia","noticia","urlToImage","url","title","description","source","image","src","alt","name","href","target","rel","ListaNoticas","noticias","map","key","formulario","state","categoria","cambiarCategoria","e","setState","value","props","consultarNoticia","onChange","this","Component","App","consultarNoticias","a","fetch","respuesta","json","articles","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iSAQeA,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACd,yBAAKC,UAAU,mCACd,uBAAGA,UAAU,qBAAqBD,KC4BrBE,EA9BC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEVC,EAAgDD,EAAhDC,WAAYC,EAAoCF,EAApCE,IAAKC,EAA+BH,EAA/BG,MAAOC,EAAwBJ,EAAxBI,YAAaC,EAAWL,EAAXK,OAEvCC,EAAQL,EACb,yBAAKH,UAAU,cACd,yBAAKS,IAAKN,EAAYO,IAAKL,IAC3B,0BAAML,UAAU,cAAcO,EAAOI,KAArC,MAEE,KAEJ,OACC,yBAAKX,UAAU,gBACd,yBAAKA,UAAU,QACbQ,EACD,yBAAKR,UAAU,gBACd,4BAAKK,GACL,2BAAIC,IAGL,yBAAKN,UAAU,eACd,uBAAGY,KAAMR,EAAKS,OAAO,SAASC,IAAI,sBAAsBd,UAAU,gCAAlE,4BChBUe,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACpB,yBAAKhB,UAAU,OAAOgB,EAASC,IAAI,SAACf,GAAD,OAAa,kBAAC,EAAD,CAASgB,IAAKhB,EAAQE,IAAKF,QAASA,QCmCtEiB,E,2MApCdC,MAAQ,CAAEC,UAAW,I,EACrBC,iBAAmB,SAACC,GACnB,EAAKC,SACJ,CACCH,UAAWE,EAAEV,OAAOY,OAErB,WAEC,EAAKC,MAAMC,iBAAiB,EAAKP,MAAMC,c,wEAKzC,OACC,yBAAKrB,UAAU,gBACd,yBAAKA,UAAU,wBACd,8BACC,mEACA,yBAAKA,UAAU,wBACd,4BAAQ4B,SAAUC,KAAKP,kBACtB,4BAAQG,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,iBAAd,mBACA,4BAAQA,MAAM,UAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,YACA,4BAAQA,MAAM,aAAd,0B,GA3BiBK,aCqCVC,E,2MAjCdX,MAAQ,CACPJ,SAAU,I,EAOXgB,kB,qBAAoB,8CAAAC,EAAA,4DAAOZ,EAAP,+BAAmB,UAChCjB,EADa,mEACqDiB,EADrD,qDAGKa,MAAM9B,GAHX,cAGb+B,EAHa,gBAIIA,EAAUC,OAJd,OAIbpB,EAJa,OAMnB,EAAKQ,SAAS,CACbR,SAAUA,EAASqB,WAPD,yC,mFAHnBR,KAAKG,sB,+BAeL,OACC,kBAAC,WAAD,KACC,kBAAC,EAAD,CAAQjC,OAAQ,sBAEhB,yBAAKC,UAAU,uCACd,kBAAC,EAAD,CAAY2B,iBAAkBE,KAAKG,oBACnC,kBAAC,EAAD,CAAchB,SAAUa,KAAKT,MAAMJ,iB,GA3BtBc,aCOEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.8f0241a1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ({ titulo }) => (\n\t<nav className=\"nav-wrapper light-blue darken-3\">\n\t\t<a className=\"brand-logo center\">{titulo}</a>\n\t</nav>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Noticia = ({ noticia }) => {\n\t//Extraer los datos\n\tconst { urlToImage, url, title, description, source } = noticia;\n\n\tconst image = urlToImage ? (\n\t\t<div className=\"card-image\">\n\t\t\t<img src={urlToImage} alt={title} />\n\t\t\t<span className=\"card-title\">{source.name} </span>\n\t\t</div>\n\t) : null;\n\n\treturn (\n\t\t<div className=\"col 12 m6 l4\">\n\t\t\t<div className=\"card\">\n\t\t\t\t{image}\n\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t<p>{description}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"waves-effect waves-light btn\">\n\t\t\t\t\t\tVer Noticia Completa\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Noticia;\n","import React from 'react';\nimport Noticia from './noticia';\n\nconst ListaNoticas = ({ noticias }) => (\n\t<div className=\"row\">{noticias.map((noticia) => <Noticia key={noticia.url} noticia={noticia} />)}</div>\n);\n\nexport default ListaNoticas;\n","import React, { Component } from 'react';\n\nclass formulario extends Component {\n\tstate = { categoria: '' };\n\tcambiarCategoria = (e) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tcategoria: e.target.value\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t//Pasarlo a la pagina principal\n\t\t\t\tthis.props.consultarNoticia(this.state.categoria);\n\t\t\t}\n\t\t);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"buscador row\">\n\t\t\t\t<div className=\"col s12 m8 offset-m2\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<h2>Encuentra Noticias por Categoría</h2>\n\t\t\t\t\t\t<div className=\"input-field col s12 \">\n\t\t\t\t\t\t\t<select onChange={this.cambiarCategoria}>\n\t\t\t\t\t\t\t\t<option value=\"general\">General</option>\n\t\t\t\t\t\t\t\t<option value=\"business\">Negocios</option>\n\t\t\t\t\t\t\t\t<option value=\"entertainment\">Entretenimineto</option>\n\t\t\t\t\t\t\t\t<option value=\"health\">Salud</option>\n\t\t\t\t\t\t\t\t<option value=\"science\">Ciencia</option>\n\t\t\t\t\t\t\t\t<option value=\"sports\">Deportes</option>\n\t\t\t\t\t\t\t\t<option value=\"tecnology\">Tecnología</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default formulario;\n","import React, { Component, Fragment } from 'react';\nimport Header from './components/header';\nimport ListaNoticas from './components/listaNoticas';\nimport Formulario from './components/formulario';\n\nclass App extends Component {\n\tstate = {\n\t\tnoticias: []\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.consultarNoticias();\n\t}\n\n\tconsultarNoticias = async (categoria = 'general') => {\n\t\tconst url = `https://newsapi.org/v2/top-headlines?country=mx&category=${categoria}&apiKey=9f789a0d115b4ffc85e6a5f3730aa47f`;\n\n\t\tconst respuesta = await fetch(url);\n\t\tconst noticias = await respuesta.json();\n\n\t\tthis.setState({\n\t\t\tnoticias: noticias.articles\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Header titulo={'Noticas React API'} />\n\n\t\t\t\t<div className=\"container white contenedor-noticias\">\n\t\t\t\t\t<Formulario consultarNoticia={this.consultarNoticias} />\n\t\t\t\t\t<ListaNoticas noticias={this.state.noticias} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}